version: "3.8"

services:
  web-app:
    build: .
    ports:
      - "3000"
    depends_on:
      - db
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.gzip.compress=true
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.routers.http-0-r8c8c8kwscwwo804c48oswgo.entryPoints=http
      - traefik.http.routers.http-0-r8c8c8kwscwwo804c48oswgo.middlewares=redirect-to-https
      - "traefik.http.routers.http-0-r8c8c8kwscwwo804c48oswgo.rule=Host(`recipes.byroni.us`) && PathPrefix(`/`)"
      - traefik.http.routers.https-0-r8c8c8kwscwwo804c48oswgo.entryPoints=https
      - traefik.http.routers.https-0-r8c8c8kwscwwo804c48oswgo.middlewares=gzip
      - "traefik.http.routers.https-0-r8c8c8kwscwwo804c48oswgo.rule=Host(`recipes.byroni.us`) && PathPrefix(`/`)"
      - traefik.http.routers.https-0-r8c8c8kwscwwo804c48oswgo.tls.certresolver=letsencrypt
      - traefik.http.routers.https-0-r8c8c8kwscwwo804c48oswgo.tls=true
      - traefik.http.services.https-0-r8c8c8kwscwwo804c48oswgo.loadbalancer.server.port=3000

  db:
    image: postgres:13
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - db-data:/var/lib/postgresql/data

volumes:
  db-data:
